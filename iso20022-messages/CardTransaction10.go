package iso20022

// Card transaction for which the authorisation has been requested.
type CardTransaction10 struct {

	// Identification of the reconciliation period between the acquirer and the issuer or their respective agents.
	Reconciliation *TransactionIdentifier2 `xml:"Rcncltn,omitempty"`

	// Date when the settlement is expected.
	InterBankSettlementDate *ISODate `xml:"IntrBkSttlmDt,omitempty"`

	// Date and time of the transaction.
	InitiatorTransactionDateTime *ISODateTime `xml:"InitrTxDtTm"`

	// Number generated by the transaction Initiator to assist in identifying a transaction uniquely. This value remains unchanged for all messages within a message pair exchange, for instance an initiation/response. It corresponds to the ISO 8583 field number 11.
	InitiatorTransactionIdentification *Max35Text `xml:"InitrTxId"`

	// Unique identification to match transactions throughout their life cycle (for example, authorisation to financial presentment, financial presentment to chargeback). It shall contain the same value in all messages throughout a transactionâ€™s life cycle. It corresponds partially to ISO 8583:2003 field number 21.
	TransactionLifeCycleIdentification *Max35Text `xml:"TxLifeCyclId,omitempty"`

	// Totals of the reconciliation.
	ReconciliationTotals *TransactionTotals4 `xml:"RcncltnTtls,omitempty"`

	// Net value of all gross amounts.
	AmountNetReconciliation *AmountAndDirection41 `xml:"AmtNetRcncltn,omitempty"`

	// Response to the reconciliation.
	TransactionResponse *ResponseType2 `xml:"TxRspn"`
}

func (c *CardTransaction10) AddReconciliation() *TransactionIdentifier2 {
	c.Reconciliation = new(TransactionIdentifier2)
	return c.Reconciliation
}

func (c *CardTransaction10) SetInterBankSettlementDate(value string) {
	c.InterBankSettlementDate = (*ISODate)(&value)
}

func (c *CardTransaction10) SetInitiatorTransactionDateTime(value string) {
	c.InitiatorTransactionDateTime = (*ISODateTime)(&value)
}

func (c *CardTransaction10) SetInitiatorTransactionIdentification(value string) {
	c.InitiatorTransactionIdentification = (*Max35Text)(&value)
}

func (c *CardTransaction10) SetTransactionLifeCycleIdentification(value string) {
	c.TransactionLifeCycleIdentification = (*Max35Text)(&value)
}

func (c *CardTransaction10) AddReconciliationTotals() *TransactionTotals4 {
	c.ReconciliationTotals = new(TransactionTotals4)
	return c.ReconciliationTotals
}

func (c *CardTransaction10) AddAmountNetReconciliation() *AmountAndDirection41 {
	c.AmountNetReconciliation = new(AmountAndDirection41)
	return c.AmountNetReconciliation
}

func (c *CardTransaction10) AddTransactionResponse() *ResponseType2 {
	c.TransactionResponse = new(ResponseType2)
	return c.TransactionResponse
}
